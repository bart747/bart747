/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box;
  font-size: 18px;
  line-height: 1.6; }

*, *:before, *:after {
  box-sizing: inherit; }

body {
  background-color: #fffcf8;
  color: #363636;
  font-family: "Source Sans Pro", sans-serif; }

.wrapper {
  margin: 0 auto;
  max-width: 1000px;
  padding: 0 1em 0; }

.wrapper-small {
  margin: 0 auto;
  max-width: 800px;
  padding: 0 1em 0; }

a {
  color: #3530A5;
  text-decoration: none; }
  a:active, a:hover {
    color: #ff2211;
    transition: color 0.25s; }

.page {
  margin-bottom: 3rem; }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

p {
  margin: 1.6em 0; }

h1,
h2,
h3 {
  color: #222; }

h1, .h1-like {
  font-size: 1.6em;
  font-weight: bold;
  line-height: 1;
  margin: 2em 0 1em; }

h2, .h2-like,
h3, .h3-like {
  font-size: 1em;
  font-weight: 600;
  margin: 3.2em 0 1.6em; }

h2, .h2-like {
  text-transform: uppercase; }

strong {
  font-weight: bold; }

blockquote {
  border-left: 1px dotted #828282;
  margin: 0;
  padding-left: 1rem; }

ul {
  margin: 1.6em 0;
  padding-left: 1rem; }

ol {
  margin: 1.6em 0;
  padding-left: 1.25rem; }

pre,
code,
p code {
  font-size: 16px; }
  @media screen and (max-width: 768px) {
    pre,
    code,
    p code {
      font-size: 14px; } }

p code {
  color: #189560; }

.secondary {
  color: #4f4f4f; }

@media screen and (min-width: 768px) {
  .col {
    float: left;
    padding-right: 1.6em; }
    .col:last-of-type {
      padding-right: 0; }
  .col.half {
    width: 50%; }
  .col.third {
    width: 33.33%; }
  .grid:after {
    content: "";
    display: table;
    clear: both; } }

.patterns-lib > h2 {
  background-color: #e8e8e8;
  color: #828282;
  font-family: "DejaVu Sans Mono", monospace;
  font-size: 1rem;
  line-height: 1.6em;
  padding: 0 0.5em;
  text-transform: uppercase;
  letter-spacing: 0.25em; }

.header {
  color: #fffcf8;
  padding: 0.5em; }

.header-nav {
  margin: 0 auto; }

.header-nav ul {
  margin: 0 auto;
  padding: 0; }

.header-nav li {
  display: inline;
  margin: 0 1em; }

.header-left {
  text-align: center; }

.header-right {
  text-align: center; }

@media all and (min-width: 768px) {
  .header-left {
    text-align: left; }
  .header-right {
    text-align: right; } }

.logo {
  font-family: "DejaVu Sans Mono", monospace;
  font-size: 0.75rem; }

.logo a {
  border-bottom: none;
  color: #222;
  font-weight: normal;
  line-height: 1;
  margin: 0 1em; }
  .logo a:hover {
    color: #3530A5; }

.masthead-h1 {
  color: #222;
  font-size: 4em;
  font-weight: bold;
  line-height: 0.8;
  letter-spacing: -0.075em;
  margin: 0.75em 0;
  letter-spacing: -0.05em;
  word-spacing: 0.05em;
  text-transform: none; }

.masthead-h2 {
  margin: 0;
  text-transform: none; }

@media all and (min-width: 568px) {
  .masthead {
    font-size: 20px; }
  .masthead-h1 {
    font-size: 5em;
    margin: 0.5em 0 1em; } }

.menu-list ul {
  line-height: 1.25;
  list-style: none;
  padding: 0; }

.menu-list li {
  margin-bottom: 1.25em; }

.menu-list-title {
  margin: 3rem 0 1.25em; }

.menu-list-small li {
  margin-bottom: 0.5em; }

.menu-list-small-title {
  margin: 3rem 0 0.5em; }

.post-list ul {
  list-style-type: none;
  padding: 0; }

.post-list li {
  margin-bottom: 3.2em; }

.post-list p::after {
  content: '..'; }

.post-list-title {
  font-size: 18px;
  text-transform: none;
  margin: 0 0 0.8em; }

fieldset {
  border: none;
  padding: 0; }

form {
  margin: 1.6em 0; }

label {
  color: #4f4f4f;
  display: block;
  font-size: 15px;
  font-weight: bold;
  text-transform: uppercase;
  margin: 1rem 0 0; }

input {
  border: 2px solid #828282;
  border-radius: 4px;
  display: inline-block;
  font-size: 20px;
  margin: 0;
  padding: 0.5em 0.5em;
  width: 80%;
  max-width: 300px;
  transition: border-color 0.5s; }

.input-message {
  color: #4f4f4f;
  font-size: 16px;
  margin: 0 0 1.6em; }

.input-line {
  display: block; }

input:focus {
  border-color: #3050f0;
  outline: none; }

input.input-success {
  border-color: #189560; }

input.input-error {
  border-color: #ff2211; }

.input-line .octicon {
  margin: 0 0.5em; }

@-webkit-keyframes blink {
  from, to {
    opacity: 1; }
  50% {
    opacity: 0.3; } }

@keyframes blink {
  from, to {
    opacity: 1; }
  50% {
    opacity: 0.3; } }

.blink {
  -webkit-animation-name: blink;
  animation-name: blink;
  -webkit-animation-duration: 0.5s;
  animation-duration: 0.5s;
  -webkit-animation-iteration-count: 2;
  animation-iteration-count: 2; }

input.cc-exp-input,
input.cc-cvc-input {
  max-width: 150px;
  width: 40%; }

button,
.btn,
a.cc_btn {
  color: white;
  background-color: #3050f0;
  background-image: linear-gradient(to bottom, #3050f0, #3530A5);
  padding: 0.5em 1em;
  border: 0;
  border-radius: 3px;
  text-align: center;
  margin: 0.5rem 0;
  max-width: 12rem;
  cursor: pointer; }
  button:hover, button:active,
  .btn:hover,
  a.cc_btn:hover,
  .btn:active,
  a.cc_btn:active {
    background-image: linear-gradient(to bottom, #3530A5, #3530A5);
    overflow: none; }
  button:active,
  .btn:active,
  a.cc_btn:active {
    text-shadow: 0 0 5px; }

.btn-round {
  border-radius: 50%;
  height: 2.5em;
  width: 2.5em; }

.btn-social {
  margin: 1em 0 1em 2px; }

.post {
  font-size: 20px; }
  @media screen and (max-width: 568px) {
    .post {
      font-size: 18px; } }

.post,
.wrapper-post-like {
  max-width: 36rem;
  margin: 0 auto;
  margin-bottom: 3rem;
  padding: 0 1em; }

.post p {
  margin-bottom: 1.6em; }

.post-meta {
  color: #828282; }

footer {
  margin-bottom: 1.6em; }

img {
  border-radius: 4px; }

.post img {
  background: #828282;
  margin: 0 auto;
  max-width: 600px;
  min-height: 250px;
  height: auto;
  width: 100%; }

.img-blur-1 {
  -webkit-animation-duration: 0.75s;
  animation-duration: 0.75s;
  -webkit-animation-name: img-blur;
  animation-name: img-blur; }

.img-blur-2 {
  -webkit-animation-duration: 1.5s;
  animation-duration: 1.5s;
  -webkit-animation-name: img-blur;
  animation-name: img-blur; }

.img-blur-3 {
  -webkit-animation-duration: 1.75s;
  animation-duration: 1.75s;
  -webkit-animation-name: img-blur;
  animation-name: img-blur; }

@-webkit-keyframes img-blur {
  from {
    -webkit-filter: blur(7px);
    filter: blur(7px); }
  to {
    -webkit-filter: blur(0);
    filter: blur(0); } }

@keyframes img-blur {
  from {
    -webkit-filter: blur(7px);
    filter: blur(7px); }
  to {
    -webkit-filter: blur(0);
    filter: blur(0); } }

.octicon {
  color: #363636; }

.cc_banner {
  background: #e8e8e8;
  position: fixed;
  bottom: 0;
  left: 0;
  font-size: 15px;
  min-width: 33%;
  padding: 0 1em; }
  .cc_banner::after {
    content: "";
    display: table;
    clear: both; }

.cc-banner p {
  margin: 0; }

.cc_logo {
  display: none; }

.cc_message {
  float: left;
  margin: 1em;
  max-width: 75%; }

a.cc_btn {
  color: white;
  float: right;
  padding: 0.25em 0.5em;
  height: 70%; }

.center {
  text-align: center; }

.txt-secondary {
  color: #828282;
  font-size: 14px; }

.bold {
  font-weight: bold; }

.hidden {
  display: none; }

.blue {
  color: #3050f0; }

.blue-dark {
  color: #3530A5; }

.blue-night {
  color: #102060; }

.red {
  color: #ff2211; }

.red-dark {
  color: #a12424; }

.grey {
  color: #828282; }

.green {
  color: #189560; }

.black {
  color: #222; }

.brown {
  color: #a77040; }

.grey {
  color: #828282; }

.grey-light {
  color: #e8e8e8; }

.purple {
  color: #5818a3; }

.yellow {
  color: #ffd600; }

.white,
.white .octicon {
  color: #fff; }

.highlight {
  border-left: 1px dotted #828282;
  color: #363636;
  line-height: 1.44em;
  margin: 1.6em 0;
  padding-left: 0.5em; }
  .highlight .c {
    color: #828282;
    font-style: italic; }
  .highlight .err {
    color: #ff2211; }
  .highlight .k {
    color: #a12424; }
  .highlight .o {
    color: #3050f0; }
  .highlight .cm {
    color: #828282;
    font-style: italic; }
  .highlight .cp {
    color: #828282;
    font-weight: bold; }
  .highlight .c1 {
    color: #828282;
    font-style: italic; }
  .highlight .cs {
    color: #828282;
    font-weight: bold;
    font-style: italic; }
  .highlight .gd {
    background-color: #e8e8e8; }
  .highlight .gd .x {
    background-color: #e8e8e8; }
  .highlight .ge {
    font-style: italic; }
  .highlight .gr {
    color: #ff2211; }
  .highlight .gi {
    background-color: #e8e8e8; }
  .highlight .gi .x {
    background-color: #e8e8e8; }
  .highlight .gs {
    font-weight: bold; }
  .highlight .gu {
    color: #828282; }
  .highlight .gt {
    color: #ff2211; }
  .highlight .kc {
    color: #a12424; }
  .highlight .kd {
    color: #a12424; }
  .highlight .kp {
    color: #a12424; }
  .highlight .kr {
    color: #a12424; }
  .highlight .kt {
    color: #a12424; }
  .highlight .m {
    color: #e46609; }
  .highlight .s {
    color: #189560; }
  .highlight .n {
    color: #3530A5; }
  .highlight .nb {
    color: #3530A5; }
  .highlight .nc {
    color: #3530A5; }
  .highlight .nd {
    color: #3530A5; }
  .highlight .no {
    color: #3530A5; }
  .highlight .ni {
    color: #3530A5; }
  .highlight .ne {
    color: #3530A5; }
  .highlight .nf {
    color: #3530A5; }
  .highlight .nn {
    color: #3530A5; }
  .highlight .nt {
    color: #3530A5; }
  .highlight .nv {
    color: #3530A5; }
  .highlight .w {
    color: #828282; }
  .highlight .mf {
    color: #e46609; }
  .highlight .mh {
    color: #e46609; }
  .highlight .mi {
    color: #e46609; }
  .highlight .mo {
    color: #e46609; }
  .highlight .sb {
    color: #189560; }
  .highlight .sc {
    color: #189560; }
  .highlight .sd {
    color: #189560; }
  .highlight .s2 {
    color: #189560; }
  .highlight .se {
    color: #189560; }
  .highlight .sh {
    color: #189560; }
  .highlight .si {
    color: #189560; }
  .highlight .sx {
    color: #189560; }
  .highlight .sr {
    color: #189560; }
  .highlight .s1 {
    color: #189560; }
  .highlight .ss {
    color: #189560; }
  .highlight .bp {
    color: #3530A5; }
  .highlight .vc {
    color: #3530A5; }
  .highlight .vg {
    color: #3530A5; }
  .highlight .vi {
    color: #3530A5; }
  .highlight .il {
    color: #3050f0; }
  .highlight .lineno {
    color: #bbb;
    margin-right: 0.5rem; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwiX2Jhc2Uuc2NzcyIsIl92YXJpYWJsZXMuc2NzcyIsIl90eXBvZ3JhcGh5LnNjc3MiLCJfbGF5b3V0LnNjc3MiLCJfaGVhZGVyLnNjc3MiLCJfbWFzdGhlYWQuc2NzcyIsIl9tZW51LWxpc3Quc2NzcyIsIl9wb3N0LWxpc3Quc2NzcyIsIl9mb3Jtcy5zY3NzIiwiX2J1dHRvbnMuc2NzcyIsIl9wb3N0LnNjc3MiLCJfZm9vdGVyLnNjc3MiLCJfaW1hZ2VzLnNjc3MiLCJfaWNvbnMuc2NzcyIsIl9jb29raWUuc2NzcyIsIl9oZWxwZXJzLnNjc3MiLCJfc3ludGF4LWhpZ2hsaWdodGluZy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDREQUE0RDtBQUU1RDs7OztHQUlHO0FBRUg7RUFDRSx3QkFBd0I7RUFBRSxPQUFPO0VBQ2pDLDJCQUEyQjtFQUFFLE9BQU87RUFDcEMsK0JBQStCO0VBQUUsT0FBTyxFQUN6Qzs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsVUFBVSxFQUNYOztBQUVEO2dGQUNnRjtBQUVoRjs7Ozs7R0FLRztBQUVIOzs7Ozs7Ozs7Ozs7O0VBYUUsZUFBZSxFQUNoQjs7QUFFRDs7O0dBR0c7QUFFSDs7OztFQUlFLHNCQUFzQjtFQUFFLE9BQU87RUFDL0IseUJBQXlCO0VBQUUsT0FBTyxFQUNuQzs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGNBQWM7RUFDZCxVQUFVLEVBQ1g7O0FBRUQ7OztHQUdHO0FDTkg7O0VEVUUsY0FBYyxFQUNmOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsOEJBQThCLEVBQy9COztBQUVEOztHQUVHO0FBRUg7O0VBRUUsV0FBVyxFQUNaOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsMEJBQTBCLEVBQzNCOztBQUVEOztHQUVHO0FBRUg7O0VBRUUsa0JBQWtCLEVBQ25COztBQUVEOztHQUVHO0FBRUg7RUFDRSxtQkFBbUIsRUFD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ZS5jc3MgdjMuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplICovXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICBtYXJnaW46IDA7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cbiIsIi8qISBub3JtYWxpemUuY3NzIHYzLjAuMiB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZSAqL1xuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgICB1c2VyIHpvb20uXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlcjogMDsgfVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG4gIG1hcmdpbjogMDtcbiAgLyogMyAqLyB9XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLyogMyAqLyB9XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7IH1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZVxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyB9XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDsgfVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMS42OyB9XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmNmODtcbiAgY29sb3I6ICMzNjM2MzY7XG4gIGZvbnQtZmFtaWx5OiBcIlNvdXJjZSBTYW5zIFByb1wiLCBzYW5zLXNlcmlmOyB9XG5cbi53cmFwcGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogMTAwMHB4O1xuICBwYWRkaW5nOiAwIDFlbSAwOyB9XG5cbi53cmFwcGVyLXNtYWxsIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogODAwcHg7XG4gIHBhZGRpbmc6IDAgMWVtIDA7IH1cblxuYSB7XG4gIGNvbG9yOiAjMzUzMEE1O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgYTphY3RpdmUsIGE6aG92ZXIge1xuICAgIGNvbG9yOiAjZmYyMjExO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMjVzOyB9XG5cbi5wYWdlIHtcbiAgbWFyZ2luLWJvdHRvbTogM3JlbTsgfVxuXG4uY2xlYXJmaXg6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7IH1cblxucCB7XG4gIG1hcmdpbjogMS42ZW0gMDsgfVxuXG5oMSxcbmgyLFxuaDMge1xuICBjb2xvcjogIzIyMjsgfVxuXG5oMSwgLmgxLWxpa2Uge1xuICBmb250LXNpemU6IDEuNmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbjogMmVtIDAgMWVtOyB9XG5cbmgyLCAuaDItbGlrZSxcbmgzLCAuaDMtbGlrZSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW46IDMuMmVtIDAgMS42ZW07IH1cblxuaDIsIC5oMi1saWtlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG5ibG9ja3F1b3RlIHtcbiAgYm9yZGVyLWxlZnQ6IDFweCBkb3R0ZWQgIzgyODI4MjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07IH1cblxudWwge1xuICBtYXJnaW46IDEuNmVtIDA7XG4gIHBhZGRpbmctbGVmdDogMXJlbTsgfVxuXG5vbCB7XG4gIG1hcmdpbjogMS42ZW0gMDtcbiAgcGFkZGluZy1sZWZ0OiAxLjI1cmVtOyB9XG5cbnByZSxcbmNvZGUsXG5wIGNvZGUge1xuICBmb250LXNpemU6IDE2cHg7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBwcmUsXG4gICAgY29kZSxcbiAgICBwIGNvZGUge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cblxucCBjb2RlIHtcbiAgY29sb3I6ICMxODk1NjA7IH1cblxuLnNlY29uZGFyeSB7XG4gIGNvbG9yOiAjNGY0ZjRmOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jb2wge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNmVtOyB9XG4gICAgLmNvbDpsYXN0LW9mLXR5cGUge1xuICAgICAgcGFkZGluZy1yaWdodDogMDsgfVxuICAuY29sLmhhbGYge1xuICAgIHdpZHRoOiA1MCU7IH1cbiAgLmNvbC50aGlyZCB7XG4gICAgd2lkdGg6IDMzLjMzJTsgfVxuICAuZ3JpZDphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjbGVhcjogYm90aDsgfSB9XG5cbi5wYXR0ZXJucy1saWIgPiBoMiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOGU4ZTg7XG4gIGNvbG9yOiAjODI4MjgyO1xuICBmb250LWZhbWlseTogXCJEZWphVnUgU2FucyBNb25vXCIsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMS42ZW07XG4gIHBhZGRpbmc6IDAgMC41ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAwLjI1ZW07IH1cblxuLmhlYWRlciB7XG4gIGNvbG9yOiAjZmZmY2Y4O1xuICBwYWRkaW5nOiAwLjVlbTsgfVxuXG4uaGVhZGVyLW5hdiB7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi5oZWFkZXItbmF2IHVsIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDA7IH1cblxuLmhlYWRlci1uYXYgbGkge1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIG1hcmdpbjogMCAxZW07IH1cblxuLmhlYWRlci1sZWZ0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5oZWFkZXItcmlnaHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlci1sZWZ0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5oZWFkZXItcmlnaHQge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9IH1cblxuLmxvZ28ge1xuICBmb250LWZhbWlseTogXCJEZWphVnUgU2FucyBNb25vXCIsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG5cbi5sb2dvIGEge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICBjb2xvcjogIzIyMjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbjogMCAxZW07IH1cbiAgLmxvZ28gYTpob3ZlciB7XG4gICAgY29sb3I6ICMzNTMwQTU7IH1cblxuLm1hc3RoZWFkLWgxIHtcbiAgY29sb3I6ICMyMjI7XG4gIGZvbnQtc2l6ZTogNGVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGluZS1oZWlnaHQ6IDAuODtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjA3NWVtO1xuICBtYXJnaW46IDAuNzVlbSAwO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDVlbTtcbiAgd29yZC1zcGFjaW5nOiAwLjA1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi5tYXN0aGVhZC1oMiB7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNTY4cHgpIHtcbiAgLm1hc3RoZWFkIHtcbiAgICBmb250LXNpemU6IDIwcHg7IH1cbiAgLm1hc3RoZWFkLWgxIHtcbiAgICBmb250LXNpemU6IDVlbTtcbiAgICBtYXJnaW46IDAuNWVtIDAgMWVtOyB9IH1cblxuLm1lbnUtbGlzdCB1bCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi5tZW51LWxpc3QgbGkge1xuICBtYXJnaW4tYm90dG9tOiAxLjI1ZW07IH1cblxuLm1lbnUtbGlzdC10aXRsZSB7XG4gIG1hcmdpbjogM3JlbSAwIDEuMjVlbTsgfVxuXG4ubWVudS1saXN0LXNtYWxsIGxpIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07IH1cblxuLm1lbnUtbGlzdC1zbWFsbC10aXRsZSB7XG4gIG1hcmdpbjogM3JlbSAwIDAuNWVtOyB9XG5cbi5wb3N0LWxpc3QgdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLnBvc3QtbGlzdCBsaSB7XG4gIG1hcmdpbi1ib3R0b206IDMuMmVtOyB9XG5cbi5wb3N0LWxpc3QgcDo6YWZ0ZXIge1xuICBjb250ZW50OiAnLi4nOyB9XG5cbi5wb3N0LWxpc3QtdGl0bGUge1xuICBmb250LXNpemU6IDE4cHg7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBtYXJnaW46IDAgMCAwLjhlbTsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG5mb3JtIHtcbiAgbWFyZ2luOiAxLjZlbSAwOyB9XG5cbmxhYmVsIHtcbiAgY29sb3I6ICM0ZjRmNGY7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDFyZW0gMCAwOyB9XG5cbmlucHV0IHtcbiAgYm9yZGVyOiAycHggc29saWQgIzgyODI4MjtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwLjVlbSAwLjVlbTtcbiAgd2lkdGg6IDgwJTtcbiAgbWF4LXdpZHRoOiAzMDBweDtcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuNXM7IH1cblxuLmlucHV0LW1lc3NhZ2Uge1xuICBjb2xvcjogIzRmNGY0ZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBtYXJnaW46IDAgMCAxLjZlbTsgfVxuXG4uaW5wdXQtbGluZSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmlucHV0OmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiAjMzA1MGYwO1xuICBvdXRsaW5lOiBub25lOyB9XG5cbmlucHV0LmlucHV0LXN1Y2Nlc3Mge1xuICBib3JkZXItY29sb3I6ICMxODk1NjA7IH1cblxuaW5wdXQuaW5wdXQtZXJyb3Ige1xuICBib3JkZXItY29sb3I6ICNmZjIyMTE7IH1cblxuLmlucHV0LWxpbmUgLm9jdGljb24ge1xuICBtYXJnaW46IDAgMC41ZW07IH1cblxuQGtleWZyYW1lcyBibGluayB7XG4gIGZyb20sIHRvIHtcbiAgICBvcGFjaXR5OiAxOyB9XG4gIDUwJSB7XG4gICAgb3BhY2l0eTogMC4zOyB9IH1cblxuLmJsaW5rIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGJsaW5rO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDI7IH1cblxuaW5wdXQuY2MtZXhwLWlucHV0LFxuaW5wdXQuY2MtY3ZjLWlucHV0IHtcbiAgbWF4LXdpZHRoOiAxNTBweDtcbiAgd2lkdGg6IDQwJTsgfVxuXG5idXR0b24sXG4uYnRuLFxuYS5jY19idG4ge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDUwZjA7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMzMDUwZjAsICMzNTMwQTUpO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMC41cmVtIDA7XG4gIG1heC13aWR0aDogMTJyZW07XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuICBidXR0b246aG92ZXIsIGJ1dHRvbjphY3RpdmUsXG4gIC5idG46aG92ZXIsXG4gIGEuY2NfYnRuOmhvdmVyLFxuICAuYnRuOmFjdGl2ZSxcbiAgYS5jY19idG46YWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjMzUzMEE1LCAjMzUzMEE1KTtcbiAgICBvdmVyZmxvdzogbm9uZTsgfVxuICBidXR0b246YWN0aXZlLFxuICAuYnRuOmFjdGl2ZSxcbiAgYS5jY19idG46YWN0aXZlIHtcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDVweDsgfVxuXG4uYnRuLXJvdW5kIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBoZWlnaHQ6IDIuNWVtO1xuICB3aWR0aDogMi41ZW07IH1cblxuLmJ0bi1zb2NpYWwge1xuICBtYXJnaW46IDFlbSAwIDFlbSAycHg7IH1cblxuLnBvc3Qge1xuICBmb250LXNpemU6IDIwcHg7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTY4cHgpIHtcbiAgICAucG9zdCB7XG4gICAgICBmb250LXNpemU6IDE4cHg7IH0gfVxuXG4ucG9zdCxcbi53cmFwcGVyLXBvc3QtbGlrZSB7XG4gIG1heC13aWR0aDogMzZyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICBwYWRkaW5nOiAwIDFlbTsgfVxuXG4ucG9zdCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMS42ZW07IH1cblxuLnBvc3QtbWV0YSB7XG4gIGNvbG9yOiAjODI4MjgyOyB9XG5cbmZvb3RlciB7XG4gIG1hcmdpbi1ib3R0b206IDEuNmVtOyB9XG5cbmltZyB7XG4gIGJvcmRlci1yYWRpdXM6IDRweDsgfVxuXG4ucG9zdCBpbWcge1xuICBiYWNrZ3JvdW5kOiAjODI4MjgyO1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgbWluLWhlaWdodDogMjUwcHg7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IDEwMCU7IH1cblxuLmltZy1ibHVyLTEge1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuNzVzO1xuICBhbmltYXRpb24tbmFtZTogaW1nLWJsdXI7IH1cblxuLmltZy1ibHVyLTIge1xuICBhbmltYXRpb24tZHVyYXRpb246IDEuNXM7XG4gIGFuaW1hdGlvbi1uYW1lOiBpbWctYmx1cjsgfVxuXG4uaW1nLWJsdXItMyB7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMS43NXM7XG4gIGFuaW1hdGlvbi1uYW1lOiBpbWctYmx1cjsgfVxuXG5Aa2V5ZnJhbWVzIGltZy1ibHVyIHtcbiAgZnJvbSB7XG4gICAgZmlsdGVyOiBibHVyKDdweCk7IH1cbiAgdG8ge1xuICAgIGZpbHRlcjogYmx1cigwKTsgfSB9XG5cbi5vY3RpY29uIHtcbiAgY29sb3I6ICMzNjM2MzY7IH1cblxuLmNjX2Jhbm5lciB7XG4gIGJhY2tncm91bmQ6ICNlOGU4ZTg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBmb250LXNpemU6IDE1cHg7XG4gIG1pbi13aWR0aDogMzMlO1xuICBwYWRkaW5nOiAwIDFlbTsgfVxuICAuY2NfYmFubmVyOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjbGVhcjogYm90aDsgfVxuXG4uY2MtYmFubmVyIHAge1xuICBtYXJnaW46IDA7IH1cblxuLmNjX2xvZ28ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5jY19tZXNzYWdlIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbjogMWVtO1xuICBtYXgtd2lkdGg6IDc1JTsgfVxuXG5hLmNjX2J0biB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nOiAwLjI1ZW0gMC41ZW07XG4gIGhlaWdodDogNzAlOyB9XG5cbi5jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnR4dC1zZWNvbmRhcnkge1xuICBjb2xvcjogIzgyODI4MjtcbiAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi5ib2xkIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLmJsdWUge1xuICBjb2xvcjogIzMwNTBmMDsgfVxuXG4uYmx1ZS1kYXJrIHtcbiAgY29sb3I6ICMzNTMwQTU7IH1cblxuLmJsdWUtbmlnaHQge1xuICBjb2xvcjogIzEwMjA2MDsgfVxuXG4ucmVkIHtcbiAgY29sb3I6ICNmZjIyMTE7IH1cblxuLnJlZC1kYXJrIHtcbiAgY29sb3I6ICNhMTI0MjQ7IH1cblxuLmdyZXkge1xuICBjb2xvcjogIzgyODI4MjsgfVxuXG4uZ3JlZW4ge1xuICBjb2xvcjogIzE4OTU2MDsgfVxuXG4uYmxhY2sge1xuICBjb2xvcjogIzIyMjsgfVxuXG4uYnJvd24ge1xuICBjb2xvcjogI2E3NzA0MDsgfVxuXG4uZ3JleSB7XG4gIGNvbG9yOiAjODI4MjgyOyB9XG5cbi5ncmV5LWxpZ2h0IHtcbiAgY29sb3I6ICNlOGU4ZTg7IH1cblxuLnB1cnBsZSB7XG4gIGNvbG9yOiAjNTgxOGEzOyB9XG5cbi55ZWxsb3cge1xuICBjb2xvcjogI2ZmZDYwMDsgfVxuXG4ud2hpdGUsXG4ud2hpdGUgLm9jdGljb24ge1xuICBjb2xvcjogI2ZmZjsgfVxuXG4uaGlnaGxpZ2h0IHtcbiAgYm9yZGVyLWxlZnQ6IDFweCBkb3R0ZWQgIzgyODI4MjtcbiAgY29sb3I6ICMzNjM2MzY7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ0ZW07XG4gIG1hcmdpbjogMS42ZW0gMDtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTsgfVxuICAuaGlnaGxpZ2h0IC5jIHtcbiAgICBjb2xvcjogIzgyODI4MjtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7IH1cbiAgLmhpZ2hsaWdodCAuZXJyIHtcbiAgICBjb2xvcjogI2ZmMjIxMTsgfVxuICAuaGlnaGxpZ2h0IC5rIHtcbiAgICBjb2xvcjogI2ExMjQyNDsgfVxuICAuaGlnaGxpZ2h0IC5vIHtcbiAgICBjb2xvcjogIzMwNTBmMDsgfVxuICAuaGlnaGxpZ2h0IC5jbSB7XG4gICAgY29sb3I6ICM4MjgyODI7XG4gICAgZm9udC1zdHlsZTogaXRhbGljOyB9XG4gIC5oaWdobGlnaHQgLmNwIHtcbiAgICBjb2xvcjogIzgyODI4MjtcbiAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICAuaGlnaGxpZ2h0IC5jMSB7XG4gICAgY29sb3I6ICM4MjgyODI7XG4gICAgZm9udC1zdHlsZTogaXRhbGljOyB9XG4gIC5oaWdobGlnaHQgLmNzIHtcbiAgICBjb2xvcjogIzgyODI4MjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7IH1cbiAgLmhpZ2hsaWdodCAuZ2Qge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU4ZTg7IH1cbiAgLmhpZ2hsaWdodCAuZ2QgLngge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU4ZTg7IH1cbiAgLmhpZ2hsaWdodCAuZ2Uge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuICAuaGlnaGxpZ2h0IC5nciB7XG4gICAgY29sb3I6ICNmZjIyMTE7IH1cbiAgLmhpZ2hsaWdodCAuZ2kge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU4ZTg7IH1cbiAgLmhpZ2hsaWdodCAuZ2kgLngge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU4ZTg7IH1cbiAgLmhpZ2hsaWdodCAuZ3Mge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gIC5oaWdobGlnaHQgLmd1IHtcbiAgICBjb2xvcjogIzgyODI4MjsgfVxuICAuaGlnaGxpZ2h0IC5ndCB7XG4gICAgY29sb3I6ICNmZjIyMTE7IH1cbiAgLmhpZ2hsaWdodCAua2Mge1xuICAgIGNvbG9yOiAjYTEyNDI0OyB9XG4gIC5oaWdobGlnaHQgLmtkIHtcbiAgICBjb2xvcjogI2ExMjQyNDsgfVxuICAuaGlnaGxpZ2h0IC5rcCB7XG4gICAgY29sb3I6ICNhMTI0MjQ7IH1cbiAgLmhpZ2hsaWdodCAua3Ige1xuICAgIGNvbG9yOiAjYTEyNDI0OyB9XG4gIC5oaWdobGlnaHQgLmt0IHtcbiAgICBjb2xvcjogI2ExMjQyNDsgfVxuICAuaGlnaGxpZ2h0IC5tIHtcbiAgICBjb2xvcjogI2U0NjYwOTsgfVxuICAuaGlnaGxpZ2h0IC5zIHtcbiAgICBjb2xvcjogIzE4OTU2MDsgfVxuICAuaGlnaGxpZ2h0IC5uIHtcbiAgICBjb2xvcjogIzM1MzBBNTsgfVxuICAuaGlnaGxpZ2h0IC5uYiB7XG4gICAgY29sb3I6ICMzNTMwQTU7IH1cbiAgLmhpZ2hsaWdodCAubmMge1xuICAgIGNvbG9yOiAjMzUzMEE1OyB9XG4gIC5oaWdobGlnaHQgLm5kIHtcbiAgICBjb2xvcjogIzM1MzBBNTsgfVxuICAuaGlnaGxpZ2h0IC5ubyB7XG4gICAgY29sb3I6ICMzNTMwQTU7IH1cbiAgLmhpZ2hsaWdodCAubmkge1xuICAgIGNvbG9yOiAjMzUzMEE1OyB9XG4gIC5oaWdobGlnaHQgLm5lIHtcbiAgICBjb2xvcjogIzM1MzBBNTsgfVxuICAuaGlnaGxpZ2h0IC5uZiB7XG4gICAgY29sb3I6ICMzNTMwQTU7IH1cbiAgLmhpZ2hsaWdodCAubm4ge1xuICAgIGNvbG9yOiAjMzUzMEE1OyB9XG4gIC5oaWdobGlnaHQgLm50IHtcbiAgICBjb2xvcjogIzM1MzBBNTsgfVxuICAuaGlnaGxpZ2h0IC5udiB7XG4gICAgY29sb3I6ICMzNTMwQTU7IH1cbiAgLmhpZ2hsaWdodCAudyB7XG4gICAgY29sb3I6ICM4MjgyODI7IH1cbiAgLmhpZ2hsaWdodCAubWYge1xuICAgIGNvbG9yOiAjZTQ2NjA5OyB9XG4gIC5oaWdobGlnaHQgLm1oIHtcbiAgICBjb2xvcjogI2U0NjYwOTsgfVxuICAuaGlnaGxpZ2h0IC5taSB7XG4gICAgY29sb3I6ICNlNDY2MDk7IH1cbiAgLmhpZ2hsaWdodCAubW8ge1xuICAgIGNvbG9yOiAjZTQ2NjA5OyB9XG4gIC5oaWdobGlnaHQgLnNiIHtcbiAgICBjb2xvcjogIzE4OTU2MDsgfVxuICAuaGlnaGxpZ2h0IC5zYyB7XG4gICAgY29sb3I6ICMxODk1NjA7IH1cbiAgLmhpZ2hsaWdodCAuc2Qge1xuICAgIGNvbG9yOiAjMTg5NTYwOyB9XG4gIC5oaWdobGlnaHQgLnMyIHtcbiAgICBjb2xvcjogIzE4OTU2MDsgfVxuICAuaGlnaGxpZ2h0IC5zZSB7XG4gICAgY29sb3I6ICMxODk1NjA7IH1cbiAgLmhpZ2hsaWdodCAuc2gge1xuICAgIGNvbG9yOiAjMTg5NTYwOyB9XG4gIC5oaWdobGlnaHQgLnNpIHtcbiAgICBjb2xvcjogIzE4OTU2MDsgfVxuICAuaGlnaGxpZ2h0IC5zeCB7XG4gICAgY29sb3I6ICMxODk1NjA7IH1cbiAgLmhpZ2hsaWdodCAuc3Ige1xuICAgIGNvbG9yOiAjMTg5NTYwOyB9XG4gIC5oaWdobGlnaHQgLnMxIHtcbiAgICBjb2xvcjogIzE4OTU2MDsgfVxuICAuaGlnaGxpZ2h0IC5zcyB7XG4gICAgY29sb3I6ICMxODk1NjA7IH1cbiAgLmhpZ2hsaWdodCAuYnAge1xuICAgIGNvbG9yOiAjMzUzMEE1OyB9XG4gIC5oaWdobGlnaHQgLnZjIHtcbiAgICBjb2xvcjogIzM1MzBBNTsgfVxuICAuaGlnaGxpZ2h0IC52ZyB7XG4gICAgY29sb3I6ICMzNTMwQTU7IH1cbiAgLmhpZ2hsaWdodCAudmkge1xuICAgIGNvbG9yOiAjMzUzMEE1OyB9XG4gIC5oaWdobGlnaHQgLmlsIHtcbiAgICBjb2xvcjogIzMwNTBmMDsgfVxuICAuaGlnaGxpZ2h0IC5saW5lbm8ge1xuICAgIGNvbG9yOiAjYmJiO1xuICAgIG1hcmdpbi1yaWdodDogMC41cmVtOyB9XG4iLCIvL1xuLy8gIGJhc2Vcbi8vXG5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcbiAgbGluZS1oZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0O1xufVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZC1jb2xvcjtcbiAgY29sb3I6ICR0ZXh0LWNvbG9yO1xuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG59XG5cbi53cmFwcGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogMTAwMHB4O1xuICBwYWRkaW5nOiAwIDFlbSAwO1xufVxuXG4ud3JhcHBlci1zbWFsbCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDgwMHB4O1xuICBwYWRkaW5nOiAwIDFlbSAwO1xufVxuXG5hIHtcbiAgY29sb3I6ICRibHVlLWRhcms7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAmOmFjdGl2ZSwgJjpob3ZlciB7XG4gICAgY29sb3I6ICRyZWQ7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4yNXM7XG4gIH1cbn1cblxuLnBhZ2Uge1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xufVxuXG4uY2xlYXJmaXg6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7XG59XG4iLCIvL1xuLy8gdmFyaWFibGVzXG4vL1xuXG5cbiRiYXNlLWZvbnQtZmFtaWx5OiBcIlNvdXJjZSBTYW5zIFByb1wiLCBzYW5zLXNlcmlmO1xuJG1vbm9zcGFjZTogICAgICAgIFwiRGVqYVZ1IFNhbnMgTW9ub1wiLCBtb25vc3BhY2U7XG4kYmFzZS1mb250LXNpemU6ICAgMThweDtcbiRsYXJnZS1mb250LXNpemU6ICAyMHB4O1xuJHNtYWxsLWZvbnQtc2l6ZTogIDE0cHg7XG4kYmFzZS1saW5lLWhlaWdodDogMS42O1xuXG5cbi8vIGJhc2Ugcmh5dGhtIHVuaXQgKD09PSBsZWFkaW5nKVxuJHU6ICAgICAgICAgICAgICAgIDEuNmVtO1xuJHUyOiAgICAgICAgICAgICAgIDMuMmVtO1xuXG4vLyBjb2xvcnNcblxuLy9icmFuZFxuJGJsYWNrOiAgICAgICAgICAgICMyMjI7XG4kYnJvd246ICAgICAgICAgICAgI2E3NzA0MDtcbiRibHVlLW5pZ2h0OiAgICAgICAjMTAyMDYwO1xuJHRleHQtY29sb3I6ICAgICAgICMzNjM2MzY7XG4kYmFja2dyb3VuZC1jb2xvcjogI2ZmZmNmODtcbiRibHVlOiAgICAgICAgICAgICAjMzA1MGYwO1xuJGJsdWUtbGlnaHQ6ICAgICAgICMwMGQxZWQ7XG4kYmx1ZS1kYXJrOiAgICAgICAgIzM1MzBBNTtcbiRncmVlbjogICAgICAgICAgICAjMTg5NTYwO1xuJGdyZWVuLWxpZ2h0OiAgICAgICM0ZWY0MDA7XG4kZ3JlZW4tZGFyazogICAgICAgIzFiM2UyZTtcbiRvcmFuZ2UtZGVlcDogICAgICAjZWMzMzExO1xuJG9yYW5nZTogICAgICAgICAgICNlNDY2MDk7XG4kcHVycGxlOiAgICAgICAgICAgIzU4MThhMztcbiRyZWQ6ICAgICAgICAgICAgICAjZmYyMjExO1xuJHJlZC1kYXJrOiAgICAgICAgICNhMTI0MjQ7XG4keWVsbG93OiAgICAgICAgICAgI2ZmZDYwMDtcblxuJGdyZXk6ICAgICAgICAgICAgICM4MjgyODI7XG4kZ3JleS1saWdodDogICAgICAgbGlnaHRlbigkZ3JleSwgNDAlKTtcbiRncmV5LWRhcms6ICAgICAgICBkYXJrZW4oJGdyZXksIDIwJSk7XG5cbiRncmFwaGl0ZTogICAgICAgICAjMmMyYzM2O1xuXG5cbi8vIHNjZWVuIHNpemVzIFxuJHNjcmVlbi1iaWc6ICAgICAgIDgwMHB4O1xuJHNjcmVlbi1taWQ6ICAgICAgIDc2OHB4O1xuJHNjcmVlbi1zbWw6ICAgICAgIDU2OHB4O1xuIiwiLy9cbi8vIHR5cG9ncmFwaHlcbi8vXG5cbi8vICR1ID09PSBsZWFkaW5nID09PSAxcmVtIHggbGluZS1oZWlnaHRcbnAge1xuICBtYXJnaW46ICR1IDA7XG59XG5cbmgxLFxuaDIsXG5oMyB7XG4gIGNvbG9yOiAkYmxhY2s7XG59XG5cbmgxLCAuaDEtbGlrZSB7XG4gIGZvbnQtc2l6ZTogJHU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luOiAyZW0gMCAxZW07XG59XG5cbmgyLCAuaDItbGlrZSxcbmgzLCAuaDMtbGlrZSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW46ICR1MiAwICR1O1xufVxuXG5oMiwgLmgyLWxpa2Uge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuYmxvY2txdW90ZSB7XG4gIGJvcmRlci1sZWZ0OiAxcHggZG90dGVkICRncmV5O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbn1cblxudWwge1xuICBtYXJnaW46ICR1IDA7XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbn1cblxub2wge1xuICBtYXJnaW46ICR1IDA7XG4gIHBhZGRpbmctbGVmdDogMS4yNXJlbTtcbn1cblxucHJlLFxuY29kZSxcbnAgY29kZSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHNjcmVlbi1taWQpIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbn1cblxucCBjb2RlIHtcbiAgY29sb3I6ICRncmVlbjtcbn1cblxuLnNlY29uZGFyeSB7XG4gIGNvbG9yOiAkZ3JleS1kYXJrO1xufVxuXG4iLCIvL1xuLy8gbGF5b3V0XG4vL1xuXG4vL2dyaWRcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRzY3JlZW4tbWlkKSB7XG4gIC5jb2wge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmctcmlnaHQ6ICR1O1xuICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgfVxuIH1cblxuICAuY29sLmhhbGYge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cblxuICAuY29sLnRoaXJkIHtcbiAgICB3aWR0aDogMzMuMzMlO1xuICB9XG5cbiAgLmdyaWQ6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cblxuLnBhdHRlcm5zLWxpYj5oMiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRncmV5LWxpZ2h0O1xuICBjb2xvcjogJGdyZXk7XG4gIGZvbnQtZmFtaWx5OiAkbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAkdTtcbiAgcGFkZGluZzogMCAwLjVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMjVlbTtcbn1cbiIsIi8vXG4vLyBoZWFkZXJcbi8vXG5cbi5oZWFkZXIge1xuICBjb2xvcjogJGJhY2tncm91bmQtY29sb3I7XG4gIHBhZGRpbmc6IDAuNWVtO1xufVxuXG4uaGVhZGVyLW5hdiB7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uaGVhZGVyLW5hdiB1bCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uaGVhZGVyLW5hdiBsaSB7XG4gIGRpc3BsYXk6IGlubGluZTtcbiAgbWFyZ2luOiAwIDFlbTtcbn1cblxuLmhlYWRlci1sZWZ0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaGVhZGVyLXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAoIG1pbi13aWR0aDogJHNjcmVlbi1taWQgKSB7XG5cbiAgLmhlYWRlci1sZWZ0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG5cbiAgLmhlYWRlci1yaWdodCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cbi8vIGxvZ29cblxuLmxvZ28ge1xuICBmb250LWZhbWlseTogJG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xufVxuXG4ubG9nbyBhIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgY29sb3I6ICRibGFjaztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbjogMCAxZW07XG5cbiAgJjpob3ZlciB7XG4gICAgY29sb3I6ICRibHVlLWRhcms7XG4gIH1cbn1cblxuIiwiLy9cbi8vIG1hc3RoZWFkXG4vL1xuXG4ubWFzdGhlYWQtaDEge1xuICBjb2xvcjogJGJsYWNrO1xuICBmb250LXNpemU6IDRlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxpbmUtaGVpZ2h0OiAwLjg7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wNzVlbTtcbiAgbWFyZ2luOiAwLjc1ZW0gMDsgXG4gIGxldHRlci1zcGFjaW5nOiAtMC4wNWVtO1xuICB3b3JkLXNwYWNpbmc6IDAuMDVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi5tYXN0aGVhZC1oMiB7XG4gIG1hcmdpbjogIDA7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAkc2NyZWVuLXNtbCkge1xuICAubWFzdGhlYWQge1xuICAgIGZvbnQtc2l6ZTogJGxhcmdlLWZvbnQtc2l6ZTtcbiAgfVxuXG4gIC5tYXN0aGVhZC1oMSB7XG4gICAgZm9udC1zaXplOiA1ZW07XG4gICAgbWFyZ2luOiAwLjVlbSAwIDFlbTsgXG4gIH1cbn1cbiIsIi8vXG4vLyBtZW51IGxpc3Rcbi8vXG5cbi5tZW51LWxpc3Qge1xuICB1bCB7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgbGkge1xuICAgIG1hcmdpbi1ib3R0b206IDEuMjVlbTtcbiAgfVxufVxuXG4ubWVudS1saXN0IGEge1xufVxuXG4ubWVudS1saXN0LXRpdGxlIHtcbiAgbWFyZ2luOiAzcmVtIDAgMS4yNWVtO1xufVxuXG4ubWVudS1saXN0LXNtYWxsIGxpIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG5cbi5tZW51LWxpc3Qtc21hbGwtdGl0bGUge1xuICBtYXJnaW46IDNyZW0gMCAwLjVlbTtcbn1cblxuXG5cbiIsIi5wb3N0LWxpc3QgdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5wb3N0LWxpc3QgbGkge1xuICBtYXJnaW4tYm90dG9tOiAyICogJHU7XG59XG4ucG9zdC1saXN0IHAge1xuICAmOjphZnRlciB7XG4gICAgY29udGVudDogJy4uJztcbiAgfVxufVxuXG4ucG9zdC1saXN0LXRpdGxlIHtcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBtYXJnaW46IDAgIDAgKDAuNSAqICR1KTtcbn1cbiIsIi8vXG4vLyBmb3Jtc1xuLy9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmZvcm0ge1xuICBtYXJnaW46ICR1IDA7XG59XG5cbmxhYmVsIHtcbiAgY29sb3I6ICRncmV5LWRhcms7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDFyZW0gMCAwO1xufVxuXG5pbnB1dCB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICRncmV5O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiAkbGFyZ2UtZm9udC1zaXplO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAuNWVtIDAuNWVtO1xuICB3aWR0aDogODAlO1xuICBtYXgtd2lkdGg6IDMwMHB4O1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC41cztcbn1cblxuLmlucHV0LW1lc3NhZ2Uge1xuICBjb2xvcjogJGdyZXktZGFyaztcbiAgZm9udC1zaXplOiAxNnB4O1xuICBtYXJnaW46IDAgMCAkdTtcbn1cblxuLmlucHV0LWxpbmUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuaW5wdXQ6Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICRibHVlO1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5pbnB1dC5pbnB1dC1zdWNjZXNzIHtcbiAgYm9yZGVyLWNvbG9yOiAkZ3JlZW47XG59XG5cbmlucHV0LmlucHV0LWVycm9yIHtcbiAgYm9yZGVyLWNvbG9yOiAkcmVkO1xufVxuLmlucHV0LWxpbmUgLm9jdGljb24ge1xuICBtYXJnaW46IDAgMC41ZW07XG59XG5cbkBrZXlmcmFtZXMgYmxpbmsge1xuICBmcm9tLCB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICA1MCUge1xuICAgIG9wYWNpdHk6IDAuMztcbiAgfVxufVxuXG4uYmxpbmsge1xuICBhbmltYXRpb24tbmFtZTogYmxpbms7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMjtcbn1cblxuaW5wdXQuY2MtZXhwLWlucHV0LFxuaW5wdXQuY2MtY3ZjLWlucHV0IHtcbiAgbWF4LXdpZHRoOiAxNTBweDtcbiAgd2lkdGg6IDQwJTtcbn1cbiIsIi8vXG4vLyAgYnV0dG9uc1xuLy9cblxuYnV0dG9uLFxuLmJ0biB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICRibHVlLCAkYmx1ZS1kYXJrKTtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAuNXJlbSAwO1xuICBtYXgtd2lkdGg6IDEycmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgJjpob3ZlciwgJjphY3RpdmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICRibHVlLWRhcmssICRibHVlLWRhcmspO1xuICAgIG92ZXJmbG93OiBub25lO1xuICB9XG4gICY6YWN0aXZlIHtcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDVweDtcbiAgfVxuXG59XG5cbi5idG4tcm91bmQge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGhlaWdodDogMi41ZW07XG4gIHdpZHRoOiAyLjVlbTtcbn1cblxuLmJ0bi1zb2NpYWwge1xuICBtYXJnaW46IDFlbSAwIDFlbSAycHg7XG59XG4iLCIvL1xuLy8gcG9zdFxuLy9cblxuLnBvc3Qge1xuICBmb250LXNpemU6ICRsYXJnZS1mb250LXNpemU7XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRzY3JlZW4tc21sKSB7XG4gICAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG4gIH1cbn1cblxuXG4ucG9zdCxcbi53cmFwcGVyLXBvc3QtbGlrZSB7XG4gIG1heC13aWR0aDogMzZyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICBwYWRkaW5nOiAwIDFlbTtcbn1cblxuLnBvc3QgcCB7XG4gIG1hcmdpbi1ib3R0b206IDFlbSAqICRiYXNlLWxpbmUtaGVpZ2h0OyBcbn1cblxuLnBvc3QtbWV0YSB7XG4gIGNvbG9yOiAkZ3JleTtcbn1cbiIsIi8vXG4vLyBmb290ZXJcbi8vXG5cbmZvb3RlciB7XG4gIG1hcmdpbi1ib3R0b206ICR1O1xufVxuXG5cbiIsIi8vXG4vLyBpbWFnZXNcbi8vXG5pbWcge1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbi5wb3N0IGltZyB7XG4gIGJhY2tncm91bmQ6ICRncmV5O1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgbWluLWhlaWdodDogMjUwcHg7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5pbWctYmx1ci0xIHtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjc1cztcbiAgYW5pbWF0aW9uLW5hbWU6IGltZy1ibHVyOyBcbn1cblxuLmltZy1ibHVyLTIge1xuICBhbmltYXRpb24tZHVyYXRpb246IDEuNXM7XG4gIGFuaW1hdGlvbi1uYW1lOiBpbWctYmx1cjsgXG59XG5cbi5pbWctYmx1ci0zIHtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxLjc1cztcbiAgYW5pbWF0aW9uLW5hbWU6IGltZy1ibHVyOyBcbn1cblxuQGtleWZyYW1lcyBpbWctYmx1ciB7IFxuXG4gIGZyb20ge1xuICAgIGZpbHRlcjogYmx1cig3cHgpO1xuICB9XG5cbiAgdG8ge1xuICAgIGZpbHRlcjogYmx1cigwKTtcbiAgfVxuXG59XG4iLCIvL1xuLy8gaWNvbnNcbi8vXG5cbi5vY3RpY29uIHtcbiAgY29sb3I6ICR0ZXh0LWNvbG9yO1xufVxuIiwiLy8gXG4vLyBjb29raWUgYmFubmVyXG4vLyBcblxuLmNjX2Jhbm5lciB7XG4gIGJhY2tncm91bmQ6ICRncmV5LWxpZ2h0O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDsgXG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgbWluLXdpZHRoOiAzMyU7XG4gIHBhZGRpbmc6IDAgMWVtO1xuXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbi5jYy1iYW5uZXIgcCB7XG4gIG1hcmdpbjogMDtcbn1cbi5jY19sb2dvIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jY19tZXNzYWdlIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbjogMWVtO1xuICBtYXgtd2lkdGg6IDc1JTtcbn1cblxuYS5jY19idG4ge1xuICBAZXh0ZW5kIC5idG47XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nOiAwLjI1ZW0gMC41ZW07XG4gIGhlaWdodDogNzAlO1xufVxuIiwiLy9cbi8vICBoZWxwZXJzXG4vL1xuXG4uY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuIH1cblxuLnR4dC1zZWNvbmRhcnkge1xuICBjb2xvcjogJGdyZXk7XG4gIGZvbnQtc2l6ZTogJHNtYWxsLWZvbnQtc2l6ZTtcbn1cblxuLmJvbGQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5ibHVlIHtcbiAgY29sb3I6ICRibHVlO1xufVxuXG4uYmx1ZS1kYXJrIHtcbiAgY29sb3I6ICRibHVlLWRhcms7XG59XG5cbi5ibHVlLW5pZ2h0IHtcbiAgY29sb3I6ICRibHVlLW5pZ2h0O1xufVxuLnJlZCB7XG4gIGNvbG9yOiAkcmVkO1xufVxuXG4ucmVkLWRhcmsge1xuICBjb2xvcjogJHJlZC1kYXJrO1xufVxuXG4uZ3JleSB7XG4gIGNvbG9yOiAkZ3JleTtcbn1cblxuLmdyZWVuIHtcbiAgY29sb3I6ICRncmVlbjtcbn1cblxuXG4uYmxhY2sge1xuICBjb2xvcjogJGJsYWNrO1xufVxuXG4uYnJvd24ge1xuICBjb2xvcjogJGJyb3duO1xufVxuXG4uZ3JleSB7XG4gIGNvbG9yOiAkZ3JleTtcbn1cblxuLmdyZXktbGlnaHQge1xuICBjb2xvcjogJGdyZXktbGlnaHQ7XG59XG5cbi5wdXJwbGUge1xuICBjb2xvcjogJHB1cnBsZTtcbn1cblxuLnllbGxvdyB7XG4gIGNvbG9yOiAkeWVsbG93O1xufVxuXG4ud2hpdGUsXG4ud2hpdGUgLm9jdGljb24ge1xuICBjb2xvcjogI2ZmZjtcbn1cbiIsIi8vXG4vLyAgaGlnaGxpZ2h0ZXJcbi8vXG5cbi5oaWdobGlnaHQge1xuICAgIGJvcmRlci1sZWZ0OiAxcHggZG90dGVkICRncmV5O1xuICAgIGNvbG9yOiAkdGV4dC1jb2xvcjsgXG4gICAgbGluZS1oZWlnaHQ6ICR1ICogMC45O1xuICAgIG1hcmdpbjogJHUgMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDAuNWVtO1xuXG4gICAgLmMgICAgIHsgY29sb3I6ICRncmV5OyBmb250LXN0eWxlOiBpdGFsaWMgfSAvLyBDb21tZW50XG4gICAgLmVyciAgIHsgY29sb3I6ICRyZWQ7IH0gLy8gRXJyb3JcbiAgICAuayAgICAgeyBjb2xvcjogJHJlZC1kYXJrOyB9IC8vIEtleXdvcmRcbiAgICAubyAgICAgeyBjb2xvcjogJGJsdWU7IH0gLy8gT3BlcmF0b3JcbiAgICAucCAgICAgeyAgfVxuICAgIC5jbSAgICB7IGNvbG9yOiAkZ3JleTsgZm9udC1zdHlsZTogaXRhbGljIH0gLy8gQ29tbWVudC5NdWx0aWxpbmVcbiAgICAuY3AgICAgeyBjb2xvcjogJGdyZXk7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gQ29tbWVudC5QcmVwcm9jXG4gICAgLmMxICAgIHsgY29sb3I6ICRncmV5OyBmb250LXN0eWxlOiBpdGFsaWMgfSAvLyBDb21tZW50LlNpbmdsZVxuICAgIC5jcyAgICB7IGNvbG9yOiAkZ3JleTsgZm9udC13ZWlnaHQ6IGJvbGQ7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8vIENvbW1lbnQuU3BlY2lhbFxuICAgIC5nZCAgICB7IGJhY2tncm91bmQtY29sb3I6ICRncmV5LWxpZ2h0IH0gLy8gR2VuZXJpYy5EZWxldGVkXG4gICAgLmdkIC54IHsgYmFja2dyb3VuZC1jb2xvcjogJGdyZXktbGlnaHQgfSAvLyBHZW5lcmljLkRlbGV0ZWQuU3BlY2lmaWNcbiAgICAuZ2UgICAgeyBmb250LXN0eWxlOiBpdGFsaWMgfSAvLyBHZW5lcmljLkVtcGhcbiAgICAuZ3IgICAgeyBjb2xvcjogJHJlZCB9IC8vIEdlbmVyaWMuRXJyb3JcbiAgICAuZ2ggICAgeyAgfSAvLyBHZW5lcmljLkhlYWRpbmdcbiAgICAuZ2kgICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleS1saWdodCB9IC8vIEdlbmVyaWMuSW5zZXJ0ZWRcbiAgICAuZ2kgLnggeyBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleS1saWdodCB9IC8vIEdlbmVyaWMuSW5zZXJ0ZWQuU3BlY2lmaWNcbiAgICAuZ28gICAgeyAgfSAvLyBHZW5lcmljLk91dHB1dFxuICAgIC5ncCAgICB7ICB9IC8vIEdlbmVyaWMuUHJvbXB0XG4gICAgLmdzICAgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBHZW5lcmljLlN0cm9uZ1xuICAgIC5ndSAgICB7IGNvbG9yOiAkZ3JleSB9IC8vIEdlbmVyaWMuU3ViaGVhZGluZ1xuICAgIC5ndCAgICB7IGNvbG9yOiAkcmVkIH0gLy8gR2VuZXJpYy5UcmFjZWJhY2tcbiAgICAua2MgICAgeyBjb2xvcjogJHJlZC1kYXJrOyB9IC8vIEtleXdvcmQuQ29uc3RhbnRcbiAgICAua2QgICAgeyBjb2xvcjogJHJlZC1kYXJrOyB9IC8vIEtleXdvcmQuRGVjbGFyYXRpb25cbiAgICAua3AgICAgeyBjb2xvcjogJHJlZC1kYXJrOyB9IC8vIEtleXdvcmQuUHNldWRvXG4gICAgLmtyICAgIHsgY29sb3I6ICRyZWQtZGFyazsgfSAvLyBLZXl3b3JkLlJlc2VydmVkXG4gICAgLmt0ICAgIHsgY29sb3I6ICRyZWQtZGFyazsgfSAvLyBLZXl3b3JkLlR5cGVcbiAgICAubSAgICAgeyBjb2xvcjogJG9yYW5nZSB9IC8vIExpdGVyYWwuTnVtYmVyXG4gICAgLnMgICAgIHsgY29sb3I6ICRncmVlbiB9IC8vIExpdGVyYWwuU3RyaW5nXG4gICAgLm4gICAgIHsgY29sb3I6ICRibHVlLWRhcms7IH0gXG4gICAgLm5hICAgIHsgIH0gLy8gTmFtZS5BdHRyaWJ1dGVcbiAgICAubmIgICAgeyBjb2xvcjogJGJsdWUtZGFyazsgfSAvLyBOYW1lLkJ1aWx0aW5cbiAgICAubmMgICAgeyBjb2xvcjogJGJsdWUtZGFyazsgfSAvLyBOYW1lLkNsYXNzXG4gICAgLm5kICAgIHsgY29sb3I6ICRibHVlLWRhcms7IH1cbiAgICAubm8gICAgeyBjb2xvcjogJGJsdWUtZGFyazsgfSAvLyBOYW1lLkNvbnN0YW50XG4gICAgLm5pICAgIHsgY29sb3I6ICRibHVlLWRhcms7IH0gLy8gTmFtZS5FbnRpdHlcbiAgICAubmUgICAgeyBjb2xvcjogJGJsdWUtZGFyazsgfSAvLyBOYW1lLkV4Y2VwdGlvblxuICAgIC5uZiAgICB7IGNvbG9yOiAkYmx1ZS1kYXJrOyB9IC8vIE5hbWUuRnVuY3Rpb25cbiAgICAubm4gICAgeyBjb2xvcjogJGJsdWUtZGFyazsgfSAvLyBOYW1lLk5hbWVzcGFjZVxuICAgIC5udCAgICB7IGNvbG9yOiAkYmx1ZS1kYXJrOyB9IC8vIE5hbWUuVGFnXG4gICAgLm52ICAgIHsgY29sb3I6ICRibHVlLWRhcms7IH0gLy8gTmFtZS5WYXJpYWJsZVxuICAgIC5vdyAgICB7ICB9IC8vIE9wZXJhdG9yLldvcmRcbiAgICAudyAgICAgeyBjb2xvcjogJGdyZXkgfSAvLyBUZXh0LldoaXRlc3BhY2VcbiAgICAubWYgICAgeyBjb2xvcjogJG9yYW5nZSB9IC8vIExpdGVyYWwuTnVtYmVyLkZsb2F0XG4gICAgLm1oICAgIHsgY29sb3I6ICRvcmFuZ2UgfSAvLyBMaXRlcmFsLk51bWJlci5IZXhcbiAgICAubWkgICAgeyBjb2xvcjogJG9yYW5nZSB9IC8vIExpdGVyYWwuTnVtYmVyLkludGVnZXJcbiAgICAubW8gICAgeyBjb2xvcjogJG9yYW5nZSB9IC8vIExpdGVyYWwuTnVtYmVyLk9jdFxuICAgIC5zYiAgICB7IGNvbG9yOiAkZ3JlZW4gfSAvLyBMaXRlcmFsLlN0cmluZy5CYWNrdGlja1xuICAgIC5zYyAgICB7IGNvbG9yOiAkZ3JlZW4gfSAvLyBMaXRlcmFsLlN0cmluZy5DaGFyXG4gICAgLnNkICAgIHsgY29sb3I6ICRncmVlbiB9IC8vIExpdGVyYWwuU3RyaW5nLkRvY1xuICAgIC5zMiAgICB7IGNvbG9yOiAkZ3JlZW4gfSAvLyBMaXRlcmFsLlN0cmluZy5Eb3VibGVcbiAgICAuc2UgICAgeyBjb2xvcjogJGdyZWVuIH0gLy8gTGl0ZXJhbC5TdHJpbmcuRXNjYXBlXG4gICAgLnNoICAgIHsgY29sb3I6ICRncmVlbiB9IC8vIExpdGVyYWwuU3RyaW5nLkhlcmVkb2NcbiAgICAuc2kgICAgeyBjb2xvcjogJGdyZWVuIH0gLy8gTGl0ZXJhbC5TdHJpbmcuSW50ZXJwb2xcbiAgICAuc3ggICAgeyBjb2xvcjogJGdyZWVuIH0gLy8gTGl0ZXJhbC5TdHJpbmcuT3RoZXJcbiAgICAuc3IgICAgeyBjb2xvcjogJGdyZWVuIH0gLy8gTGl0ZXJhbC5TdHJpbmcuUmVnZXhcbiAgICAuczEgICAgeyBjb2xvcjogJGdyZWVuIH0gLy8gTGl0ZXJhbC5TdHJpbmcuU2luZ2xlXG4gICAgLnNzICAgIHsgY29sb3I6ICRncmVlbiB9IC8vIExpdGVyYWwuU3RyaW5nLlN5bWJvbFxuICAgIC5icCAgICB7IGNvbG9yOiAkYmx1ZS1kYXJrIH0gLy8gTmFtZS5CdWlsdGluLlBzZXVkb1xuICAgIC52YyAgICB7IGNvbG9yOiAkYmx1ZS1kYXJrIH0gLy8gTmFtZS5WYXJpYWJsZS5DbGFzc1xuICAgIC52ZyAgICB7IGNvbG9yOiAkYmx1ZS1kYXJrIH0gLy8gTmFtZS5WYXJpYWJsZS5HbG9iYWxcbiAgICAudmkgICAgeyBjb2xvcjogJGJsdWUtZGFyayB9IC8vIE5hbWUuVmFyaWFibGUuSW5zdGFuY2VcbiAgICAuaWwgICAgeyBjb2xvcjogJGJsdWUgfSAvLyBMaXRlcmFsLk51bWJlci5JbnRlZ2VyLkxvbmdcblxuICAgIC5saW5lbm8geyBjb2xvcjogI2JiYjsgbWFyZ2luLXJpZ2h0OiAwLjVyZW07fVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
