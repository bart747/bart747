/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box;
  font-size: 18px;
  line-height: 1.6; }

*, *:before, *:after {
  box-sizing: inherit; }

body {
  background-color: #fffcf8;
  color: #363636;
  font-family: "Source Sans Pro", sans-serif; }

.wrapper {
  margin: 0 auto;
  max-width: 1000px;
  padding: 0 1em 0; }

.wrapper-small {
  margin: 0 auto;
  max-width: 800px;
  padding: 0 1em 0; }

a {
  color: #3530A5;
  text-decoration: none; }
  a:active, a:hover {
    color: #ff2211;
    transition: color 0.25s; }

.page {
  margin-bottom: 3rem; }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

p {
  margin: 1.6em 0; }

h1,
h2,
h3 {
  color: #222; }

h1, .h1-like {
  font-size: 1.6em;
  font-weight: bold;
  line-height: 1;
  margin: 2em 0 1em; }

h2, .h2-like,
h3, .h3-like {
  font-size: 1em;
  font-weight: 600;
  margin: 3.2em 0 1.6em; }

h2, .h2-like {
  text-transform: uppercase; }

strong {
  font-weight: bold; }

blockquote {
  border-left: 1px dotted #828282;
  margin: 0;
  padding-left: 1rem; }

ul {
  margin: 1.6em 0;
  padding-left: 1rem; }

ol {
  margin: 1.6em 0;
  padding-left: 1.25rem; }

pre,
code,
p code {
  font-size: 16px; }
  @media screen and (max-width: 768px) {
    pre,
    code,
    p code {
      font-size: 14px; } }

p code {
  color: #189560; }

.secondary {
  color: #4f4f4f; }

@media screen and (min-width: 768px) {
  .col {
    float: left;
    padding-right: 1.6em; }
    .col:last-of-type {
      padding-right: 0; }
  .col.half {
    width: 50%; }
  .col.third {
    width: 33.33%; }
  .grid:after {
    content: "";
    display: table;
    clear: both; } }

.patterns-lib > h2 {
  background-color: #e8e8e8;
  color: #828282;
  font-family: "DejaVu Sans Mono", monospace;
  font-size: 1rem;
  line-height: 1.6em;
  padding: 0 0.5em;
  text-transform: uppercase;
  letter-spacing: 0.25em; }

.header {
  background: #222;
  color: #fffcf8;
  text-align: center;
  padding: 0.5em; }

.logo {
  font-family: "DejaVu Sans Mono", monospace;
  font-size: 0.75rem;
  text-align: center;
  margin: 0 auto; }

.logo a {
  border-bottom: none;
  color: white;
  font-weight: normal;
  line-height: 1;
  margin: 0 1em; }
  .logo a:hover {
    color: #ff2211; }

.masthead-h1 {
  color: #222;
  font-size: 4em;
  font-weight: bold;
  line-height: 0.8;
  letter-spacing: -0.075em;
  margin: 0.75em 0;
  letter-spacing: -0.05em;
  word-spacing: 0.05em;
  text-transform: none; }

.masthead-h2 {
  margin: 0;
  text-transform: none; }

@media all and (min-width: 768px) {
  .masthead {
    font-size: 20px; }
  .masthead-h1 {
    font-size: 5em;
    margin: 1em 0; } }

.menu-list ul {
  line-height: 1.25;
  list-style: none;
  padding: 0; }

.menu-list li {
  margin-bottom: 1.25em; }

.menu-list-title {
  margin: 3rem 0 1.25em; }

.menu-list-small li {
  margin-bottom: 0.5em; }

.menu-list-small-title {
  margin: 3rem 0 0.5em; }

.menu-list-header {
  margin: 0 auto; }

.menu-list-header ul {
  margin: 0 auto;
  padding: 0; }

.menu-list-header li {
  display: inline;
  margin: 0 1em; }

.menu-list-header a {
  color: #828282; }
  .menu-list-header a:hover, .menu-list-header a:active {
    color: inherit; }

.post-list ul {
  list-style-type: none;
  padding: 0; }

.post-list li {
  margin-bottom: 3.2em; }

.post-list p::after {
  content: '..'; }

.post-list-title {
  font-size: 18px;
  text-transform: none;
  margin: 0 0 0.8em; }

fieldset {
  border: none;
  padding: 0; }

form {
  margin: 1.6em 0; }

label {
  color: #4f4f4f;
  display: block;
  font-size: 15px;
  font-weight: bold;
  text-transform: uppercase;
  margin: 1rem 0 0; }

input {
  border: 2px solid #828282;
  border-radius: 4px;
  display: inline-block;
  font-size: 20px;
  margin: 0;
  padding: 0.5em 0.5em;
  width: 80%;
  max-width: 300px;
  transition: border-color 0.5s; }

.input-message {
  color: #4f4f4f;
  font-size: 16px;
  margin: 0 0 1.6em; }

.input-line {
  display: block; }

input:focus {
  border-color: #3050f0;
  outline: none; }

input.input-success {
  border-color: #189560; }

input.input-error {
  border-color: #ff2211; }

.input-line .octicon {
  margin: 0 0.5em; }

@-webkit-keyframes blink {
  from, to {
    opacity: 1; }
  50% {
    opacity: 0.3; } }

@keyframes blink {
  from, to {
    opacity: 1; }
  50% {
    opacity: 0.3; } }

.blink {
  -webkit-animation-name: blink;
  animation-name: blink;
  -webkit-animation-duration: 0.5s;
  animation-duration: 0.5s;
  -webkit-animation-iteration-count: 2;
  animation-iteration-count: 2; }

input.cc-exp-input,
input.cc-cvc-input {
  max-width: 150px;
  width: 40%; }

button,
.btn,
a.cc_btn {
  color: white;
  background-color: #3050f0;
  background-image: linear-gradient(to bottom, #3050f0, #3530A5);
  padding: 0.5em 1em;
  border: 0;
  border-radius: 3px;
  text-align: center;
  margin: 0.5rem 0;
  max-width: 12rem;
  cursor: pointer; }
  button:hover, button:active,
  .btn:hover,
  a.cc_btn:hover,
  .btn:active,
  a.cc_btn:active {
    background-image: linear-gradient(to bottom, #3530A5, #3530A5);
    overflow: none; }
  button:active,
  .btn:active,
  a.cc_btn:active {
    text-shadow: 0 0 5px; }

.btn-round {
  border-radius: 50%;
  height: 2.5em;
  width: 2.5em; }

.btn-social {
  margin: 1em 0 1em 2px; }

.post {
  font-size: 20px; }
  @media screen and (max-width: 768px) {
    .post {
      font-size: 18px; } }

.post,
.wrapper-post-like {
  max-width: 36rem;
  margin: 0 auto;
  margin-bottom: 3rem;
  padding: 0 1em; }

.post p {
  margin-bottom: 1.6em; }

.post-meta {
  color: #828282; }

footer {
  margin-bottom: 1.6em; }

img {
  border-radius: 4px; }

.post img {
  background: #828282;
  margin: 0 auto;
  max-width: 600px;
  min-height: 250px;
  height: auto;
  width: 100%; }

.img-blur-1 {
  -webkit-animation-duration: 0.75s;
  animation-duration: 0.75s;
  -webkit-animation-name: img-blur;
  animation-name: img-blur; }

.img-blur-2 {
  -webkit-animation-duration: 1.5s;
  animation-duration: 1.5s;
  -webkit-animation-name: img-blur;
  animation-name: img-blur; }

.img-blur-3 {
  -webkit-animation-duration: 1.75s;
  animation-duration: 1.75s;
  -webkit-animation-name: img-blur;
  animation-name: img-blur; }

@-webkit-keyframes img-blur {
  from {
    -webkit-filter: blur(7px);
    filter: blur(7px); }
  to {
    -webkit-filter: blur(0);
    filter: blur(0); } }

@keyframes img-blur {
  from {
    -webkit-filter: blur(7px);
    filter: blur(7px); }
  to {
    -webkit-filter: blur(0);
    filter: blur(0); } }

.octicon {
  color: #363636; }

.cc_banner {
  background: #e8e8e8;
  position: fixed;
  bottom: 0;
  left: 0;
  font-size: 15px;
  min-width: 33%;
  padding: 0 1em; }
  .cc_banner::after {
    content: "";
    display: table;
    clear: both; }

.cc-banner p {
  margin: 0; }

.cc_logo {
  display: none; }

.cc_message {
  float: left;
  margin: 1em;
  max-width: 75%; }

a.cc_btn {
  color: white;
  float: right;
  padding: 0.25em 0.5em;
  height: 70%; }

.center {
  text-align: center; }

.txt-secondary {
  color: #828282;
  font-size: 14px; }

.bold {
  font-weight: bold; }

.hidden {
  display: none; }

.blue {
  color: #3050f0; }

.blue-dark {
  color: #3530A5; }

.blue-night {
  color: #102060; }

.red {
  color: #ff2211; }

.red-dark {
  color: #a12424; }

.grey {
  color: #828282; }

.green {
  color: #189560; }

.black {
  color: #222; }

.brown {
  color: #a77040; }

.grey {
  color: #828282; }

.grey-light {
  color: #e8e8e8; }

.purple {
  color: #5818a3; }

.yellow {
  color: #ffd600; }

.white,
.white .octicon {
  color: #fff; }

.highlight {
  border-left: 1px dotted #828282;
  color: #363636;
  line-height: 1.44em;
  margin: 1.6em 0;
  padding-left: 0.5em; }
  .highlight .c {
    color: #828282;
    font-style: italic; }
  .highlight .err {
    color: #ff2211; }
  .highlight .k {
    color: #a12424; }
  .highlight .o {
    color: #3050f0; }
  .highlight .cm {
    color: #828282;
    font-style: italic; }
  .highlight .cp {
    color: #828282;
    font-weight: bold; }
  .highlight .c1 {
    color: #828282;
    font-style: italic; }
  .highlight .cs {
    color: #828282;
    font-weight: bold;
    font-style: italic; }
  .highlight .gd {
    background-color: #e8e8e8; }
  .highlight .gd .x {
    background-color: #e8e8e8; }
  .highlight .ge {
    font-style: italic; }
  .highlight .gr {
    color: #ff2211; }
  .highlight .gi {
    background-color: #e8e8e8; }
  .highlight .gi .x {
    background-color: #e8e8e8; }
  .highlight .gs {
    font-weight: bold; }
  .highlight .gu {
    color: #828282; }
  .highlight .gt {
    color: #ff2211; }
  .highlight .kc {
    color: #a12424; }
  .highlight .kd {
    color: #a12424; }
  .highlight .kp {
    color: #a12424; }
  .highlight .kr {
    color: #a12424; }
  .highlight .kt {
    color: #a12424; }
  .highlight .m {
    color: #e46609; }
  .highlight .s {
    color: #189560; }
  .highlight .n {
    color: #3530A5; }
  .highlight .nb {
    color: #3530A5; }
  .highlight .nc {
    color: #3530A5; }
  .highlight .nd {
    color: #3530A5; }
  .highlight .no {
    color: #3530A5; }
  .highlight .ni {
    color: #3530A5; }
  .highlight .ne {
    color: #3530A5; }
  .highlight .nf {
    color: #3530A5; }
  .highlight .nn {
    color: #3530A5; }
  .highlight .nt {
    color: #3530A5; }
  .highlight .nv {
    color: #3530A5; }
  .highlight .w {
    color: #828282; }
  .highlight .mf {
    color: #e46609; }
  .highlight .mh {
    color: #e46609; }
  .highlight .mi {
    color: #e46609; }
  .highlight .mo {
    color: #e46609; }
  .highlight .sb {
    color: #189560; }
  .highlight .sc {
    color: #189560; }
  .highlight .sd {
    color: #189560; }
  .highlight .s2 {
    color: #189560; }
  .highlight .se {
    color: #189560; }
  .highlight .sh {
    color: #189560; }
  .highlight .si {
    color: #189560; }
  .highlight .sx {
    color: #189560; }
  .highlight .sr {
    color: #189560; }
  .highlight .s1 {
    color: #189560; }
  .highlight .ss {
    color: #189560; }
  .highlight .bp {
    color: #3530A5; }
  .highlight .vc {
    color: #3530A5; }
  .highlight .vg {
    color: #3530A5; }
  .highlight .vi {
    color: #3530A5; }
  .highlight .il {
    color: #3050f0; }
  .highlight .lineno {
    color: #bbb;
    margin-right: 0.5rem; }

/*# sourceMappingURL=data:application/json;base64, */
