(function(){var t,e,n,r,a,o,i,l,u,s,c,h,p,g,f,v,d,m,y,C,T,w,$,D,S=[].slice,k=[].indexOf||function(t){for(var e=0,n=this.length;n>e;e++)if(e in this&&this[e]===t)return e;return-1};t=window.jQuery||window.Zepto||window.$,t.payment={},t.payment.fn={},t.fn.payment=function(){var e,n;return n=arguments[0],e=2<=arguments.length?S.call(arguments,1):[],t.payment.fn[n].apply(this,e)},a=/(\d{1,4})/g,t.payment.cards=r=[{type:"visaelectron",patterns:[4026,417500,4405,4508,4844,4913,4917],format:a,length:[16],cvcLength:[3],luhn:!0},{type:"maestro",patterns:[5018,502,503,56,58,639,6220,67],format:a,length:[12,13,14,15,16,17,18,19],cvcLength:[3],luhn:!0},{type:"forbrugsforeningen",patterns:[600],format:a,length:[16],cvcLength:[3],luhn:!0},{type:"dankort",patterns:[5019],format:a,length:[16],cvcLength:[3],luhn:!0},{type:"visa",patterns:[4],format:a,length:[13,16],cvcLength:[3],luhn:!0},{type:"mastercard",patterns:[51,52,53,54,55,22,23,24,25,26,27],format:a,length:[16],cvcLength:[3],luhn:!0},{type:"amex",patterns:[34,37],format:/(\d{1,4})(\d{1,6})?(\d{1,5})?/,length:[15],cvcLength:[3,4],luhn:!0},{type:"dinersclub",patterns:[30,36,38,39],format:/(\d{1,4})(\d{1,6})?(\d{1,4})?/,length:[14],cvcLength:[3],luhn:!0},{type:"discover",patterns:[60,64,65,622],format:a,length:[16],cvcLength:[3],luhn:!0},{type:"unionpay",patterns:[62,88],format:a,length:[16,17,18,19],cvcLength:[3],luhn:!1},{type:"jcb",patterns:[35],format:a,length:[16],cvcLength:[3],luhn:!0}],e=function(t){var e,n,a,o,i,l,u,s;for(t=(t+"").replace(/\D/g,""),n=0,o=r.length;o>n;n++)for(e=r[n],s=e.patterns,a=0,i=s.length;i>a;a++)if(u=s[a],l=u+"",t.substr(0,l.length)===l)return e},n=function(t){var e,n,a;for(n=0,a=r.length;a>n;n++)if(e=r[n],e.type===t)return e},p=function(t){var e,n,r,a,o,i;for(o=!0,i=0,n=(t+"").split("").reverse(),r=0,a=n.length;a>r;r++)e=n[r],e=parseInt(e,10),(o=!o)&&(e*=2),e>9&&(e-=9),i+=e;return i%10===0},h=function(t){var e;return null!=t.prop("selectionStart")&&t.prop("selectionStart")!==t.prop("selectionEnd")?!0:null!=("undefined"!=typeof document&&null!==document&&null!=(e=document.selection)?e.createRange:void 0)&&document.selection.createRange().text?!0:!1},$=function(t,e){var n,r,a,o;try{n=e.prop("selectionStart")}catch(a){r=a,n=null}return o=e.val(),e.val(t),null!==n&&e.is(":focus")?(n===o.length&&(n=t.length),e.prop("selectionStart",n),e.prop("selectionEnd",n)):void 0},m=function(t){var e,n,r,a,o,i,l,u;for(null==t&&(t=""),r="０１２３４５６７８９",a="0123456789",u="",e=t.split(""),o=0,l=e.length;l>o;o++)n=e[o],i=r.indexOf(n),i>-1&&(n=a[i]),u+=n;return u},d=function(e){return setTimeout(function(){var n,r;return n=t(e.currentTarget),r=n.val(),r=m(r),r=r.replace(/\D/g,""),$(r,n)})},f=function(e){return setTimeout(function(){var n,r;return n=t(e.currentTarget),r=n.val(),r=m(r),r=t.payment.formatCardNumber(r),$(r,n)})},l=function(n){var r,a,o,i,l,u,s;return o=String.fromCharCode(n.which),!/^\d+$/.test(o)||(r=t(n.currentTarget),s=r.val(),a=e(s+o),i=(s.replace(/\D/g,"")+o).length,u=16,a&&(u=a.length[a.length.length-1]),i>=u||null!=r.prop("selectionStart")&&r.prop("selectionStart")!==s.length)?void 0:(l=a&&"amex"===a.type?/^(\d{4}|\d{4}\s\d{6})$/:/(?:^|\s)(\d{4})$/,l.test(s)?(n.preventDefault(),setTimeout(function(){return r.val(s+" "+o)})):l.test(s+o)?(n.preventDefault(),setTimeout(function(){return r.val(s+o+" ")})):void 0)},o=function(e){var n,r;return n=t(e.currentTarget),r=n.val(),8!==e.which||null!=n.prop("selectionStart")&&n.prop("selectionStart")!==r.length?void 0:/\d\s$/.test(r)?(e.preventDefault(),setTimeout(function(){return n.val(r.replace(/\d\s$/,""))})):/\s\d?$/.test(r)?(e.preventDefault(),setTimeout(function(){return n.val(r.replace(/\d$/,""))})):void 0},v=function(e){return setTimeout(function(){var n,r;return n=t(e.currentTarget),r=n.val(),r=m(r),r=t.payment.formatExpiry(r),$(r,n)})},u=function(e){var n,r,a;return r=String.fromCharCode(e.which),/^\d+$/.test(r)?(n=t(e.currentTarget),a=n.val()+r,/^\d$/.test(a)&&"0"!==a&&"1"!==a?(e.preventDefault(),setTimeout(function(){return n.val("0"+a+" / ")})):/^\d\d$/.test(a)?(e.preventDefault(),setTimeout(function(){var t,e;return t=parseInt(a[0],10),e=parseInt(a[1],10),e>2&&0!==t?n.val("0"+t+" / "+e):n.val(a+" / ")})):void 0):void 0},s=function(e){var n,r,a;return r=String.fromCharCode(e.which),/^\d+$/.test(r)?(n=t(e.currentTarget),a=n.val(),/^\d\d$/.test(a)?n.val(a+" / "):void 0):void 0},c=function(e){var n,r,a;return a=String.fromCharCode(e.which),"/"===a||" "===a?(n=t(e.currentTarget),r=n.val(),/^\d$/.test(r)&&"0"!==r?n.val("0"+r+" / "):void 0):void 0},i=function(e){var n,r;return n=t(e.currentTarget),r=n.val(),8!==e.which||null!=n.prop("selectionStart")&&n.prop("selectionStart")!==r.length?void 0:/\d\s\/\s$/.test(r)?(e.preventDefault(),setTimeout(function(){return n.val(r.replace(/\d\s\/\s$/,""))})):void 0},g=function(e){return setTimeout(function(){var n,r;return n=t(e.currentTarget),r=n.val(),r=m(r),r=r.replace(/\D/g,"").slice(0,4),$(r,n)})},w=function(t){var e;return t.metaKey||t.ctrlKey?!0:32===t.which?!1:0===t.which?!0:t.which<33?!0:(e=String.fromCharCode(t.which),!!/[\d\s]/.test(e))},C=function(n){var r,a,o,i;return r=t(n.currentTarget),o=String.fromCharCode(n.which),/^\d+$/.test(o)&&!h(r)?(i=(r.val()+o).replace(/\D/g,""),a=e(i),a?i.length<=a.length[a.length.length-1]:i.length<=16):void 0},T=function(e){var n,r,a;return n=t(e.currentTarget),r=String.fromCharCode(e.which),/^\d+$/.test(r)&&!h(n)?(a=n.val()+r,a=a.replace(/\D/g,""),a.length>6?!1:void 0):void 0},y=function(e){var n,r,a;return n=t(e.currentTarget),r=String.fromCharCode(e.which),/^\d+$/.test(r)&&!h(n)?(a=n.val()+r,a.length<=4):void 0},D=function(e){var n,a,o,i,l;return n=t(e.currentTarget),l=n.val(),i=t.payment.cardType(l)||"unknown",n.hasClass(i)?void 0:(a=function(){var t,e,n;for(n=[],t=0,e=r.length;e>t;t++)o=r[t],n.push(o.type);return n}(),n.removeClass("unknown"),n.removeClass(a.join(" ")),n.addClass(i),n.toggleClass("identified","unknown"!==i),n.trigger("payment.cardType",i))},t.payment.fn.formatCardCVC=function(){return this.on("keypress",w),this.on("keypress",y),this.on("paste",g),this.on("change",g),this.on("input",g),this},t.payment.fn.formatCardExpiry=function(){return this.on("keypress",w),this.on("keypress",T),this.on("keypress",u),this.on("keypress",c),this.on("keypress",s),this.on("keydown",i),this.on("change",v),this.on("input",v),this},t.payment.fn.formatCardNumber=function(){return this.on("keypress",w),this.on("keypress",C),this.on("keypress",l),this.on("keydown",o),this.on("keyup",D),this.on("paste",f),this.on("change",f),this.on("input",f),this.on("input",D),this},t.payment.fn.restrictNumeric=function(){return this.on("keypress",w),this.on("paste",d),this.on("change",d),this.on("input",d),this},t.payment.fn.cardExpiryVal=function(){return t.payment.cardExpiryVal(t(this).val())},t.payment.cardExpiryVal=function(t){var e,n,r,a;return r=t.split(/[\s\/]+/,2),e=r[0],a=r[1],2===(null!=a?a.length:void 0)&&/^\d+$/.test(a)&&(n=(new Date).getFullYear(),n=n.toString().slice(0,2),a=n+a),e=parseInt(e,10),a=parseInt(a,10),{month:e,year:a}},t.payment.validateCardNumber=function(t){var n,r;return t=(t+"").replace(/\s+|-/g,""),/^\d+$/.test(t)?(n=e(t),n?(r=t.length,k.call(n.length,r)>=0&&(n.luhn===!1||p(t))):!1):!1},t.payment.validateCardExpiry=function(e,n){var r,a,o;return"object"==typeof e&&"month"in e&&(o=e,e=o.month,n=o.year),e&&n?(e=t.trim(e),n=t.trim(n),/^\d+$/.test(e)&&/^\d+$/.test(n)&&e>=1&&12>=e?(2===n.length&&(n=70>n?"20"+n:"19"+n),4!==n.length?!1:(a=new Date(n,e),r=new Date,a.setMonth(a.getMonth()-1),a.setMonth(a.getMonth()+1,1),a>r)):!1):!1},t.payment.validateCardCVC=function(e,r){var a,o;return e=t.trim(e),/^\d+$/.test(e)?(a=n(r),null!=a?(o=e.length,k.call(a.cvcLength,o)>=0):e.length>=3&&e.length<=4):!1},t.payment.cardType=function(t){var n;return t?(null!=(n=e(t))?n.type:void 0)||null:null},t.payment.formatCardNumber=function(n){var r,a,o,i;return n=n.replace(/\D/g,""),(r=e(n))?(i=r.length[r.length.length-1],n=n.slice(0,i),r.format.global?null!=(o=n.match(r.format))?o.join(" "):void 0:(a=r.format.exec(n),null!=a?(a.shift(),a=t.grep(a,function(t){return t}),a.join(" ")):void 0)):n},t.payment.formatExpiry=function(t){var e,n,r,a;return(n=t.match(/^\D*(\d{1,2})(\D+)?(\d{1,4})?/))?(e=n[1]||"",r=n[2]||"",a=n[3]||"",a.length>0?r=" / ":" /"===r?(e=e.substring(0,1),r=""):2===e.length||r.length>0?r=" / ":1===e.length&&"0"!==e&&"1"!==e&&(e="0"+e,r=" / "),e+r+a):""}}).call(this);
"use strict";!function(){var e=document.getElementsByClassName("home"),s=document.getElementsByClassName("post"),t=document.getElementsByClassName("blog"),l=document.getElementsByClassName("link-home"),a=document.getElementsByClassName("link-blog");void 0!==e[0]?l[0].classList.add("link-active"):(void 0!==s[0]||void 0!==t[0])&&a[0].classList.add("link-active")}();
"use strict";!function(){function n(n){$(n).removeClass("input-success"),$(n).addClass("input-error")}function i(n){$(n).removeClass("input-error"),$(n).addClass("input-success")}function t(n,i,t){$(n).hasClass("input-error")&&($(i).addClass("hidden"),$(t).removeClass("hidden"))}function c(n,i,t){$(n).hasClass("input-success")&&($(i).removeClass("hidden"),$(t).addClass("hidden"))}function s(n,i,t){$(n).removeClass("input-error"),$(i).addClass("hidden"),$(t).addClass("hidden"),$(n).removeClass("input-success")}$(".cc-num-input").payment("formatCardNumber"),$(".cc-exp-input").payment("formatCardExpiry"),$(".cc-cvc-input").payment("formatCardCVC");var a={input:".cc-num-input",type:".cc-type",iconOk:".cc-num-icon-success",iconErr:".cc-num-icon-error"};!function(){function r(n){$(a.input).hasClass(n)&&$(a.type+"."+n).addClass("txt-highlight")}function o(){$(a.type).removeClass("txt-highlight")}function e(){var s=$(a.input).val(),r=$.payment.validateCardNumber(s);r===!0&&(i(a.input),c(a.input,a.iconOk,a.iconErr)),r===!1&&(n(a.input),t(a.input,a.iconOk,a.iconErr))}$(a.input).on("input",function(){$(this).val().length>1?(o(),r("visa"),r("mastercard"),r("amex"),r("discover"),$(this).hasClass("amex")&&17===$(this).val().length&&e(),$(this).hasClass("identified")&&19===$(this).val().length&&e(),$(this).hasClass("amex")&&$(this).val().length<17&&s(this,a.iconOk,a.iconErr),$(this).hasClass("amex")===!1&&$(this).val().length<19&&s(this,a.iconOk,a.iconErr),$(this).hasClass("unknown")&&(n(this),t(this,a.iconOk,a.iconErr))):(s(this,a.iconOk,a.iconErr),o())})}(),function(){function a(){var s=$(r.input).payment("cardExpiryVal"),a=$.payment.validateCardExpiry(s.month,s.year);a===!0&&(i(r.input),c(r.input,r.iconOk,r.iconErr)),a===!1&&(n(r.input),t(r.input,r.iconOk,r.iconErr))}var r={input:".cc-exp-input",iconOk:".cc-exp-icon-success",iconErr:".cc-exp-icon-error"};$(r.input).on("input",function(){7===$(this).val().length||9===$(this).val().length?a():s(this,r.iconOk,r.iconErr)})}(),function r(){function r(s){var a=$(o.input).val(),r=$.payment.validateCardCVC(a);r===!0&&(i(o.input),c(o.input,o.iconOk,o.iconErr)),r===!1&&(n(o.input),t(o.input,o.iconOk,o.iconErr))}var o={input:".cc-cvc-input",iconOk:".cc-cvc-icon-success",iconErr:".cc-cvc-icon-error"};$(o.input).on("input",function(){$(a.input).hasClass("amex")?$(o.input).val().length>3?r(this):s(this,o.iconOk,o.iconErr):3===$(this).val().length?r(this):s(this,o.iconOk,o.iconErr)})}()}();
"use strict";
"use strict";!function(){var e=(document.getElementsByClassName("home"),document.getElementsByClassName("post")),t=document.getElementsByClassName("blog"),s=(document.getElementsByClassName("link-home"),document.getElementsByClassName("link-blog"));window.onload=function(){(void 0!==e[0]||void 0!==t[0])&&s[0].classList.add("link-active")}}();
"use strict";!function(){function t(t){t.addEventListener("click",function(e){return t.classList.toggle("is-on")})}var e=document.getElementsByClassName("is-switchable"),s=[].slice.call(e);s.forEach(t)}();
//# sourceMappingURL=data:application/json;base64,
